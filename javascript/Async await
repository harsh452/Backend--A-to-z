ASYNC and AWAIT are used to work with promises in javascript
If there is a ASYNC attached to the function then that means it will return some promise

We can use await when unction return a promise 
it tells javascript to wait untill it settles the resukt


const pobj1 = new Promise((resolve , reject)=>{
    setTimeout(()=>{
        let arr=[1,2,3,4,5];
        resolve(arr[2]); ///  this signifies that we got the output and we 
                         /// inserted it in resolve func.
        //reject("error while communicating") 
    },2000)
})

 getBiodata = (rollData)=>{
    return new Promise((resolve ,reject)=>{
        setTimeout((rollData)=>{
        const biodata = {
            name:"harsh",
            age:"21"
        }
        resolve(`hi my name is ${biodata.name} iam ${biodata.age} years old 
        my roll  no .is ${rollData}`)
    },2000 , rollData)
    })
    
}
async function getData(){
   const rollNo = await pobj1;
   console.log(rollNo)
   const bio = await getBiodata(rollNo)
   console.log(bio)
}

getData();
